{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/anetasmac/mentee-react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/anetasmac/mentee-react/src/GroupCard.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n.card{\\n\\tborder-color:transparent;\\n\\ttransition:all 0.5s linear;\\n\\tbox-shadow:1px 1px 3px 0px rgba(1,0,0,0.2);\\n\\t\\n}\\n.card-footer{\\n\\tborder-color:transparent;\\n\\tcolor: black;\\n\\tbackground-color:white;\\n\\ttransition:all 0.5s linear;\\n\\t\\n}\\n&:hover{\\n\\t.card{\\n\\tborder:0.06rem solid rgba(1,0,0,0.3);\\n\\tbox-shadow:2px 2px 5px 0px rgba(1,0,0,0.2)\\n}\\n\\t.card-footer {\\n\\tbackground: rgba(250,250,250);\\n\\t}}\\n\\t\\n.images-container{\\n\\tposition:relative;\\n\\toverflow:hidden;\\n\\t\\n\\t}\\t\\n.card-images-top{\\n\\ttransition: all 1s linear;\\n}\\n.images-container:hover .card-img-top{\\n\\ttransform:scale(1.2);\\n\\t\\n\\t}\\n\\n.add-btn{\\n\\tposition:absolute;\\n\\tbottom:0;\\n\\tright:0;\\n\\t\\n\\tbackground:var(--lightGreen);\\n\\tborder:none;\\n\\tcolor: var(--mainWhite);\\n\\ttransform:translate(100%,100%);\\n\\ttransition:all 0.5s linear;\\n}\\n.images-container:hover .add-btn {\\n\\ttransform: translate(0,0);\\n\\t\\n}\\nimg{\\n\\tborder-radius:50%\\n}\\n\\n\\n.add-btn:hover{\\n\\tbackground:var(--mainWhite);\\n\\tborder:0.06rem solid;\\n\\tcolor: var(--lightGreen);\\n\\tcursor:pointer;}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { GroupConsumer } from \"./GroupContext\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nexport default class GroupCard extends Component {\n  render() {\n    const _this$props$group = this.props.group,\n          id = _this$props$group.id,\n          name = _this$props$group.name,\n          img = _this$props$group.img,\n          category = _this$props$group.category,\n          subcategory = _this$props$group.subcategory,\n          about = _this$props$group.about,\n          inNetwork = _this$props$group.inNetwork,\n          match = _this$props$group.match;\n    return React.createElement(GroupWrapper, {\n      className: \"col-9  col-md-5 col-lg-6 my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(GroupConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, value => React.createElement(\"div\", {\n      className: \"images-container p-2 \",\n      onClick: () => value.handleGroup(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-flex \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"align-self-center mb-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, about)), React.createElement(\"button\", {\n      className: \"add-btn\",\n      disabled: inNetwork ? true : false,\n      onClick: () => {\n        value.addGroup(id);\n        value.openModal(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, inNetwork ? React.createElement(NavLink, {\n      to: \"/mynetworkgroups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-capitalize mb-0\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" \", \"in my Network\")) : React.createElement(\"i\", {\n      className: \"fas fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })))), React.createElement(NavLink, {\n      to: \"/GroupDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"\".concat(match.url, \"/{name}\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, name), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:name\"),\n      render: ({\n        match\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" \", match.params.name, \" \"), React.createElement(\"div\", {\n        className: \"card-footer d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img,\n        width: \"90\",\n        height: \"90\",\n        alt: \"group\",\n        className: \"card-images-to s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"align-self-left mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        className: \"card-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"align-self-left mb-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, category))), React.createElement(\"p\", {\n        className: \" font-italic mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), subcategory))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}\nGroupCard.propTypes = {\n  group: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    name: PropTypes.string,\n    category: PropTypes.string,\n    subcategory: PropTypes.string,\n    inNetwork: PropTypes.bool\n  }).isRequired\n};\nconst GroupWrapper = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/anetasmac/mentee-react/src/GroupCard.js"],"names":["React","Component","styled","GroupConsumer","NavLink","Route","PropTypes","GroupCard","render","props","group","id","name","img","category","subcategory","about","inNetwork","match","value","handleGroup","addGroup","openModal","url","path","params","propTypes","shape","number","string","bool","isRequired","GroupWrapper","div"],"mappings":"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","sourcesContent":["import React, {Component}  from \"react\"\nimport styled from \"styled-components\";\nimport {GroupConsumer} from \"./GroupContext\";\nimport {NavLink,Route} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\n\nexport default class GroupCard extends Component {\nrender () {\n\nconst {id, name, img, category, subcategory, about, inNetwork,match} = this.props.group;\n    return (\n  \n    <GroupWrapper className=\"col-9  col-md-5 col-lg-6 my-4\">\n        <div className = \"card\">\n        <GroupConsumer>\n        {value=>(\n        \t<div className = \"images-container p-2 \" \n        \tonClick={()=> value.handleGroup(id)}\n        \t>\n        \t\n      \t\t\t<div className=\"card-flex \">\n      \t\t\t<p className=\"align-self-center mb-10\">\n      \t\t\t{about}\n      \t\t\t</p></div>\n        \t\n      \t\t\t\n      \t\t<button \n      \t\t\tclassName=\"add-btn\" \n      \t\t\tdisabled={inNetwork ? true : false} \n      \t\t\tonClick={()=>{\n      \t\t\t\tvalue.addGroup(id);\n\t\t\t\t\tvalue.openModal(id);\n\t\t\t\t\t\t}}\n      \t\t\t>\n      \t\t{inNetwork?(\n      \t\t<NavLink to = \"/mynetworkgroups\">\n      \t\t\t<p className=\"text-capitalize mb-0\" disabled>\n      \t\t\t{\" \"}\n      \t\t\tin my Network\n      \t\t\t</p></NavLink>\n      \t\t\t):(\n      \t\t\t<i className=\"fas fa-plus\" />\n\t\t\t\t\t\t)}\n      \t\t</button>\n\t\t\t\t\t</div>)}\n\t\t\t\t\t</GroupConsumer>\n      \t\n     \t\n      \t\n     \n      {/* card footer */}\n      <NavLink to = \"/GroupDetails\">\n      <NavLink to={`${match.url}/{name}`}>{name}</NavLink>\n\n \t\t\n \t\t<Route path={`${match.path}/:name`} render= {({match}) =>( \n  \t<div> \n  \t<h3> {match.params.name} </h3>\n      \t\t\t\n      \t\t\n      \t\t\n      \t\t\n     \n     \n      <div className=\"card-footer d-flex justify-content-between\">\n      \t\n        \t\t<img src = {img} width=\"90\" height=\"90\" alt = \"group\" \n        \t\tclassName= \"card-images-to s\"/>\n      \t\t\n      \t\t<div>\n      \t\t\t<h3 className=\"align-self-left mb-0\">\n      \t\t\t\t{name}\n      \t\t\t</h3>\n      \t\t\t<div className=\"card-flex justify-content-between\">\n      \t\t\t\t<p className=\"align-self-left mb-10\">\n      \t\t\t\t{category}\n      \t\t\t</p>\n      \t\t\t</div>\n      \t\t</div>\n      <p className=\" font-italic mb-1\">\n      \t<span className=\"mr-1\"></span>\n      \t{subcategory}\n      \t</p>\n      \t</div></div>)}/>\n      \t</NavLink>\n      </div>\n    </GroupWrapper>\n   \n    );\n  }\n}\n\n\nGroupCard.propTypes = {\ngroup:PropTypes.shape({\n\tid:PropTypes.number,\n\timg:PropTypes.string,\n\tname:PropTypes.string,\n\tcategory:PropTypes.string,\n\tsubcategory:PropTypes.string,\n\tinNetwork:PropTypes.bool\n}).isRequired\n\n}\n\nconst GroupWrapper = styled.div`\n\n.card{\n\tborder-color:transparent;\n\ttransition:all 0.5s linear;\n\tbox-shadow:1px 1px 3px 0px rgba(1,0,0,0.2);\n\t\n}\n.card-footer{\n\tborder-color:transparent;\n\tcolor: black;\n\tbackground-color:white;\n\ttransition:all 0.5s linear;\n\t\n}\n&:hover{\n\t.card{\n\tborder:0.06rem solid rgba(1,0,0,0.3);\n\tbox-shadow:2px 2px 5px 0px rgba(1,0,0,0.2)\n}\n\t.card-footer {\n\tbackground: rgba(250,250,250);\n\t}}\n\t\n.images-container{\n\tposition:relative;\n\toverflow:hidden;\n\t\n\t}\t\n.card-images-top{\n\ttransition: all 1s linear;\n}\n.images-container:hover .card-img-top{\n\ttransform:scale(1.2);\n\t\n\t}\n\n.add-btn{\n\tposition:absolute;\n\tbottom:0;\n\tright:0;\n\t\n\tbackground:var(--lightGreen);\n\tborder:none;\n\tcolor: var(--mainWhite);\n\ttransform:translate(100%,100%);\n\ttransition:all 0.5s linear;\n}\n.images-container:hover .add-btn {\n\ttransform: translate(0,0);\n\t\n}\nimg{\n\tborder-radius:50%\n}\n\n\n.add-btn:hover{\n\tbackground:var(--mainWhite);\n\tborder:0.06rem solid;\n\tcolor: var(--lightGreen);\n\tcursor:pointer;}\n`;\n\n\n\n"]},"metadata":{},"sourceType":"module"}