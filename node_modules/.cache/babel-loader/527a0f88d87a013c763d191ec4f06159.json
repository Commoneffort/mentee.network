{"ast":null,"code":"import React from \"react\";\nimport { Api, JsonRpc, JsSignatureProvider } from \"eosjs\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\"; // Use eosjs2 if your version of eosjs is > 16\n\nimport Eos from 'eosjs'; // eosio endpoint\n\nconst endpoint = \"http://jungle2.cryptolions.io:80\"; // Jungle\n// Networks are used to reference certain blockchains.\n// They let you get accounts and help you build signature providers.\n\nconst network = ScatterJS.Network.fromJson({\n  blockchain: \"eos\",\n  protocol: \"http\",\n  host: \"jungle2.cryptolions.io\",\n  port: 80,\n  // chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\" // EOS Main Net\n  chainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" // Jungle\n\n});\n\nclass EOSIOClient extends React.Component {\n  constructor(contractAccount) {\n    super(contractAccount);\n    this.contractAccount = contractAccount;\n    ScatterJS.plugins(new ScatterEOS());\n    ScatterJS.connect('mentee-react', {\n      network\n    }).then(connected => {\n      if (!connected) return console.log(\"Issue Connecting\");\n    });\n    const requiredFields = {\n      accounts: ['eos']\n    };\n    this.scatter = window.scatter;\n    scatter.getIdentity(requiredFields).then(identity => {//...\n    }).catch(error => {//...\n    }); // The latest scatter-js will also allow using:\n\n    scatter.login(requiredFields); // Result: {name:'...', authority:'active', publicKey:'...', blockchain:'eos', chainId:'...'}\n\n    const account = ScatterJS.identity.accounts.find(x => {\n      return x.blockchain === 'eos';\n    });\n  }\n\n}\n\nexport default EOSIOClient;","map":{"version":3,"sources":["/Users/anetasmac/mentee-react/src/Eosio-client.js"],"names":["React","Api","JsonRpc","JsSignatureProvider","ScatterJS","ScatterEOS","Eos","endpoint","network","Network","fromJson","blockchain","protocol","host","port","chainId","EOSIOClient","Component","constructor","contractAccount","plugins","connect","then","connected","console","log","requiredFields","accounts","scatter","window","getIdentity","identity","catch","error","login","account","find","x"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,mBAAvB,QAAkD,OAAlD;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAAkD;;AAClD,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,kCAAjB,C,CAAqD;AAErD;AACA;;AACA,MAAMC,OAAO,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,QAAlB,CAA2B;AAC1CC,EAAAA,UAAU,EAAE,KAD8B;AAE1CC,EAAAA,QAAQ,EAAE,MAFgC;AAG1CC,EAAAA,IAAI,EAAE,wBAHoC;AAI1CC,EAAAA,IAAI,EAAE,EAJoC;AAK1C;AACAC,EAAAA,OAAO,EAAE,kEANiC,CAMkC;;AANlC,CAA3B,CAAhB;;AASA,MAAMC,WAAN,SAA0BhB,KAAK,CAACiB,SAAhC,CAA0C;AAE1CC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AAC3B,UAAMA,eAAN;AACA,SAAKA,eAAL,GAAuBA,eAAvB;AACFf,IAAAA,SAAS,CAACgB,OAAV,CAAkB,IAAIf,UAAJ,EAAlB;AACCD,IAAAA,SAAS,CAACiB,OAAV,CAAkB,cAAlB,EAAkC;AAACb,MAAAA;AAAD,KAAlC,EAA6Cc,IAA7C,CAAkDC,SAAS,IAAI;AAC5D,UAAG,CAACA,SAAJ,EAAe,OAAOC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAP;AAAyC,KAD3D;AAED,UAAMC,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAC,CAAE,KAAF;AADU,KAAvB;AAGA,SAAKC,OAAL,GAAaC,MAAM,CAACD,OAApB;AACIA,IAAAA,OAAO,CAACE,WAAR,CAAoBJ,cAApB,EAAoCJ,IAApC,CAAyCS,QAAQ,IAAI,CACrD;AACH,KAFG,EAEDC,KAFC,CAEKC,KAAK,IAAI,CACd;AACH,KAJG,EAVyB,CAgB7B;;AACAL,IAAAA,OAAO,CAACM,KAAR,CAAcR,cAAd,EAjB6B,CAkB7B;;AAEA,UAAMS,OAAO,GAAG/B,SAAS,CAAC2B,QAAV,CAAmBJ,QAAnB,CAA4BS,IAA5B,CAAiCC,CAAC,IAAI;AAClD,aAAOA,CAAC,CAAC1B,UAAF,KAAiB,KAAxB;AACH,KAFe,CAAhB;AAGE;;AAzBwC;;AA4B1C,eAAeK,WAAf","sourcesContent":["import React from \"react\";\nimport { Api, JsonRpc, JsSignatureProvider } from \"eosjs\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\"; // Use eosjs2 if your version of eosjs is > 16\nimport Eos from 'eosjs';\n\n// eosio endpoint\nconst endpoint = \"http://jungle2.cryptolions.io:80\"; // Jungle\n\n// Networks are used to reference certain blockchains.\n// They let you get accounts and help you build signature providers.\nconst network = ScatterJS.Network.fromJson({\n\tblockchain: \"eos\",\n\tprotocol: \"http\",\n\thost: \"jungle2.cryptolions.io\",\n\tport: 80,\n\t// chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\" // EOS Main Net\n\tchainId: \"e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473\" // Jungle\n});\n\nclass EOSIOClient extends React.Component {\n\nconstructor(contractAccount) {\n\t\tsuper(contractAccount);\n\t\tthis.contractAccount = contractAccount;\nScatterJS.plugins(new ScatterEOS());\n\tScatterJS.connect('mentee-react', {network}).then(connected => {\n    if(!connected) return console.log(\"Issue Connecting\"); });\nconst requiredFields = {\n    accounts:[ 'eos' ]\n};\nthis.scatter=window.scatter;\n\t\t\t\tscatter.getIdentity(requiredFields).then(identity => {\n    //...\n}).catch(error => {\n    //...\n})\n\n// The latest scatter-js will also allow using:\nscatter.login(requiredFields)\n// Result: {name:'...', authority:'active', publicKey:'...', blockchain:'eos', chainId:'...'}\n\nconst account = ScatterJS.identity.accounts.find(x => {\n    return x.blockchain === 'eos';\n});\n\t};\n}\n\nexport default EOSIOClient;"]},"metadata":{},"sourceType":"module"}